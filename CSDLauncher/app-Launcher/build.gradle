apply plugin: 'com.android.application'
apply from: '../common.gradle'

file("$rootDir/.env").with { File dotenvFile ->
    if (dotenvFile.exists()) {
        dotenvFile.readLines().findAll { String line ->
            !line.trim().startsWith("#") && line.split("=", 2).size() == 2
        }.each { String line ->
            def (key, value) = line.split("=", 2)
            if (project.findProperty(key) == null) {
                project.ext.setProperty(key, value)
            }
        }
    }
}

static def buildConfigStringFromString(String s) {
    if (s == null) {
        return "null"  // Will be translated to `String foo = null`
    }
    s = s.replace('"', '\\"')  // Allow double quotes in string value
    return "\"${s}\""  // Will be translated to `String foo = "some value"`
}

def getBuildConfigStringFromProperty(String propertyName) {
    def value = project.findProperty(propertyName)
    return buildConfigStringFromString(value)
}

android {
    buildToolsVersion project.ext.androidBuildToolsVersion
    compileSdkVersion project.ext.androidCompileSdkVersion
    defaultConfig {
        applicationId "com.fxc.ev.launcher"
        targetSdkVersion project.ext.androidTargetSdkVersion
        minSdkVersion project.ext.androidMinSdkVersion
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        /*ndk {
            //设置支持的so库架构
            abiFilters "x86","x86_64"
        }*/

        resConfigs 'en','cn'

        //setProperty("archivesBaseName", "navkit2-example-$versionName")

        buildConfigField "String", "API_KEY", getBuildConfigStringFromProperty("apiKey")

        buildConfigField "String", "KEYSTORE_PASSWORD", buildConfigStringFromString(
                project.findProperty("keyStorePassword") ?: project.findProperty("keystorePassword"))

        buildConfigField "String", "MAP_UPDATE_SERVER_URI", buildConfigStringFromString(
                project.findProperty("mapUpdateServerUri") ?: "https://api.tomtom.com/nds-test/updates/1/fetch")

        buildConfigField "String", "MAP_UPDATE_SERVER_API_KEY",
                getBuildConfigStringFromProperty("mapUpdateServerApiKey")
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "EVLauncher.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
        debug {
            debuggable true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        pickFirst 'lib/**/libc++_shared.so'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    splits {
        abi {
            enable true
        }
    }

}

ext {
    navKit2SdkGroup = "com.tomtom.navkit2.sdk"
    navKit2BomDependencyDetails = [group: "$navKit2SdkGroup", name: "sdk-bom", version: bomVersion]
}

dependencies {

    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.preference:preference:1.0.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "com.google.android.material:material:1.2.0"
    implementation "com.mikepenz:materialdrawer:6.0.9"

    implementation "androidx.multidex:multidex:2.0.1"

    implementation platform(navKit2BomDependencyDetails)
    implementation(group: "$navKit2SdkGroup", name: "analytics-proxy")
    implementation(group: "$navKit2SdkGroup", name: "framework-clientlib-common")
    implementation(group: "$navKit2SdkGroup", name: "framework-http")
    implementation(group: "$navKit2SdkGroup", name: "framework-protobufcomms-memchannel")
    implementation(group: "$navKit2SdkGroup", name: "framework-rpc-binder")
    implementation(group: "$navKit2SdkGroup", name: "framework-security")
    implementation(group: "$navKit2SdkGroup", name: "globalsettings-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "mapaccesssync-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "mapdisplay-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "mapdisplay-clientlib-traffic-renderer")
    implementation(group: "$navKit2SdkGroup", name: "mapdisplay-clientlib-trip-renderer")
    implementation(group: "$navKit2SdkGroup", name: "mapdisplay-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "mapdisplay-tile-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "mapmanagement-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "mapmanagement-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navassist-datarecorder-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "navassist-datarecorder-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navassist-suggestions-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "navassist-suggestions-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navigation-drivingassistance-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "navigation-drivingassistance-ndsdataaccess")
    implementation(group: "$navKit2SdkGroup", name: "navigation-drivingassistance-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navigation-mapmatcher-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "navigation-onboardmap-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navigation-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navigation-positioning")
    implementation(group: "$navKit2SdkGroup", name: "navigation-tile-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "navigation-trip-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "navigation-vehicle-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "onboardmap-ndsdataaccess")
    implementation(group: "$navKit2SdkGroup", name: "poidetails-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "poidetails-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "reversegeocoder-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "reversegeocoder-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "search-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "search-onboardservice") //metis@0224 add
    implementation(group: "$navKit2SdkGroup", name: "userprofile-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "userprofile-clientlib-place-converter")
    implementation(group: "$navKit2SdkGroup", name: "userprofile-navcloudconnector-clientlib")
    implementation(group: "$navKit2SdkGroup", name: "userprofile-navcloudconnector-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "userprofile-onboardservice")
    implementation(group: "$navKit2SdkGroup", name: "traffic-tile-clientlib")

}

